package com.esprit.entities;
// Generated 27 juin 2018 23:49:29 by Hibernate Tools 4.3.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Notifications generated by hbm2java
 */
@Entity
@Table(name = "notifications", catalog = "bdnetjee")
public class Notifications implements java.io.Serializable {

	private Integer idNotif;
	private Notifications notifications;
	private Users users;
	private int notification;
	private Date credate;
	private Set<Notifications> notificationses = new HashSet<Notifications>(0);

	public Notifications() {
	}

	public Notifications(int notification, Date credate) {
		this.notification = notification;
		this.credate = credate;
	}

	public Notifications(Notifications notifications, Users users, int notification, Date credate,
			Set<Notifications> notificationses) {
		this.notifications = notifications;
		this.users = users;
		this.notification = notification;
		this.credate = credate;
		this.notificationses = notificationses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idNotif", unique = true, nullable = false)
	public Integer getIdNotif() {
		return this.idNotif;
	}

	public void setIdNotif(Integer idNotif) {
		this.idNotif = idNotif;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Notification_idNotif")
	public Notifications getNotifications() {
		return this.notifications;
	}

	public void setNotifications(Notifications notifications) {
		this.notifications = notifications;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_idUser")
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@Column(name = "notification", nullable = false)
	public int getNotification() {
		return this.notification;
	}

	public void setNotification(int notification) {
		this.notification = notification;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "credate", nullable = false, length = 19)
	public Date getCredate() {
		return this.credate;
	}

	public void setCredate(Date credate) {
		this.credate = credate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "notifications")
	public Set<Notifications> getNotificationses() {
		return this.notificationses;
	}

	public void setNotificationses(Set<Notifications> notificationses) {
		this.notificationses = notificationses;
	}

}
