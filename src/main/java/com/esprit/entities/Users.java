package com.esprit.entities;
// Generated 27 juin 2018 23:49:29 by Hibernate Tools 4.3.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Users generated by hbm2java
 */
@Entity
@Table(name = "users", catalog = "bdnetjee")
public class Users implements java.io.Serializable {

	private String idUser;
	private String lastName;
	private String firstName;
	private String gender;
	private String addressCountry;
	private String addressCity;
	private String addressStreet;
	private String addressZipCode;
	private int addressHouseNumber;
	private String role;
	private String email;
	private boolean emailConfirmed;
	private String password;
	private String securityStamp;
	private String phoneNumber;
	private boolean phoneNumberConfirmed;
	private boolean twoFactorEnabled;
	private Date lockoutEndDateUtc;
	private boolean lockoutEnabled;
	private int accessFailedCount;
	private int id;
	private String login;
	private Set<Notifications> notificationses = new HashSet<Notifications>(0);
	private Set<Vehicles> vehicleses = new HashSet<Vehicles>(0);
	private Set<Customuserclaims> customuserclaimses = new HashSet<Customuserclaims>(0);
	private Set<Contracts> contractses = new HashSet<Contracts>(0);
	private Set<Customuserroles> customuserroleses = new HashSet<Customuserroles>(0);
	private Set<Classes> classeses = new HashSet<Classes>(0);
	private Set<Customuserlogins> customuserloginses = new HashSet<Customuserlogins>(0);

	public Users() {
	}

	public Users(int addressHouseNumber, boolean emailConfirmed, boolean phoneNumberConfirmed, boolean twoFactorEnabled,
			boolean lockoutEnabled, int accessFailedCount, int id) {
		this.addressHouseNumber = addressHouseNumber;
		this.emailConfirmed = emailConfirmed;
		this.phoneNumberConfirmed = phoneNumberConfirmed;
		this.twoFactorEnabled = twoFactorEnabled;
		this.lockoutEnabled = lockoutEnabled;
		this.accessFailedCount = accessFailedCount;
		this.id = id;
	}

	public Users(String lastName, String firstName, String gender, String addressCountry, String addressCity,
			String addressStreet, String addressZipCode, int addressHouseNumber, String role, String email,
			boolean emailConfirmed, String password, String securityStamp, String phoneNumber,
			boolean phoneNumberConfirmed, boolean twoFactorEnabled, Date lockoutEndDateUtc, boolean lockoutEnabled,
			int accessFailedCount, int id, String login, Set<Notifications> notificationses, Set<Vehicles> vehicleses,
			Set<Customuserclaims> customuserclaimses, Set<Contracts> contractses,
			Set<Customuserroles> customuserroleses, Set<Classes> classeses, Set<Customuserlogins> customuserloginses) {
		this.lastName = lastName;
		this.firstName = firstName;
		this.gender = gender;
		this.addressCountry = addressCountry;
		this.addressCity = addressCity;
		this.addressStreet = addressStreet;
		this.addressZipCode = addressZipCode;
		this.addressHouseNumber = addressHouseNumber;
		this.role = role;
		this.email = email;
		this.emailConfirmed = emailConfirmed;
		this.password = password;
		this.securityStamp = securityStamp;
		this.phoneNumber = phoneNumber;
		this.phoneNumberConfirmed = phoneNumberConfirmed;
		this.twoFactorEnabled = twoFactorEnabled;
		this.lockoutEndDateUtc = lockoutEndDateUtc;
		this.lockoutEnabled = lockoutEnabled;
		this.accessFailedCount = accessFailedCount;
		this.id = id;
		this.login = login;
		this.notificationses = notificationses;
		this.vehicleses = vehicleses;
		this.customuserclaimses = customuserclaimses;
		this.contractses = contractses;
		this.customuserroleses = customuserroleses;
		this.classeses = classeses;
		this.customuserloginses = customuserloginses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idUser", unique = true, nullable = false, length = 128)
	public String getIdUser() {
		return this.idUser;
	}

	public void setIdUser(String idUser) {
		this.idUser = idUser;
	}

	@Column(name = "LastName")
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "FirstName")
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "Gender")
	public String getGender() {
		return this.gender;
	}

	public void setGender(String gender) {
		this.gender = gender;
	}

	@Column(name = "Address_Country")
	public String getAddressCountry() {
		return this.addressCountry;
	}

	public void setAddressCountry(String addressCountry) {
		this.addressCountry = addressCountry;
	}

	@Column(name = "Address_City")
	public String getAddressCity() {
		return this.addressCity;
	}

	public void setAddressCity(String addressCity) {
		this.addressCity = addressCity;
	}

	@Column(name = "Address_Street")
	public String getAddressStreet() {
		return this.addressStreet;
	}

	public void setAddressStreet(String addressStreet) {
		this.addressStreet = addressStreet;
	}

	@Column(name = "Address_ZipCode")
	public String getAddressZipCode() {
		return this.addressZipCode;
	}

	public void setAddressZipCode(String addressZipCode) {
		this.addressZipCode = addressZipCode;
	}

	@Column(name = "Address_HouseNumber", nullable = false)
	public int getAddressHouseNumber() {
		return this.addressHouseNumber;
	}

	public void setAddressHouseNumber(int addressHouseNumber) {
		this.addressHouseNumber = addressHouseNumber;
	}

	@Column(name = "role")
	public String getRole() {
		return this.role;
	}

	public void setRole(String role) {
		this.role = role;
	}

	@Column(name = "Email")
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "EmailConfirmed", nullable = false)
	public boolean isEmailConfirmed() {
		return this.emailConfirmed;
	}

	public void setEmailConfirmed(boolean emailConfirmed) {
		this.emailConfirmed = emailConfirmed;
	}

	@Column(name = "password")
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "SecurityStamp")
	public String getSecurityStamp() {
		return this.securityStamp;
	}

	public void setSecurityStamp(String securityStamp) {
		this.securityStamp = securityStamp;
	}

	@Column(name = "PhoneNumber")
	public String getPhoneNumber() {
		return this.phoneNumber;
	}

	public void setPhoneNumber(String phoneNumber) {
		this.phoneNumber = phoneNumber;
	}

	@Column(name = "PhoneNumberConfirmed", nullable = false)
	public boolean isPhoneNumberConfirmed() {
		return this.phoneNumberConfirmed;
	}

	public void setPhoneNumberConfirmed(boolean phoneNumberConfirmed) {
		this.phoneNumberConfirmed = phoneNumberConfirmed;
	}

	@Column(name = "TwoFactorEnabled", nullable = false)
	public boolean isTwoFactorEnabled() {
		return this.twoFactorEnabled;
	}

	public void setTwoFactorEnabled(boolean twoFactorEnabled) {
		this.twoFactorEnabled = twoFactorEnabled;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LockoutEndDateUtc", length = 19)
	public Date getLockoutEndDateUtc() {
		return this.lockoutEndDateUtc;
	}

	public void setLockoutEndDateUtc(Date lockoutEndDateUtc) {
		this.lockoutEndDateUtc = lockoutEndDateUtc;
	}

	@Column(name = "LockoutEnabled", nullable = false)
	public boolean isLockoutEnabled() {
		return this.lockoutEnabled;
	}

	public void setLockoutEnabled(boolean lockoutEnabled) {
		this.lockoutEnabled = lockoutEnabled;
	}

	@Column(name = "AccessFailedCount", nullable = false)
	public int getAccessFailedCount() {
		return this.accessFailedCount;
	}

	public void setAccessFailedCount(int accessFailedCount) {
		this.accessFailedCount = accessFailedCount;
	}

	@Column(name = "Id", nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@Column(name = "Login")
	public String getLogin() {
		return this.login;
	}

	public void setLogin(String login) {
		this.login = login;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Notifications> getNotificationses() {
		return this.notificationses;
	}

	public void setNotificationses(Set<Notifications> notificationses) {
		this.notificationses = notificationses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Vehicles> getVehicleses() {
		return this.vehicleses;
	}

	public void setVehicleses(Set<Vehicles> vehicleses) {
		this.vehicleses = vehicleses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Customuserclaims> getCustomuserclaimses() {
		return this.customuserclaimses;
	}

	public void setCustomuserclaimses(Set<Customuserclaims> customuserclaimses) {
		this.customuserclaimses = customuserclaimses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Contracts> getContractses() {
		return this.contractses;
	}

	public void setContractses(Set<Contracts> contractses) {
		this.contractses = contractses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Customuserroles> getCustomuserroleses() {
		return this.customuserroleses;
	}

	public void setCustomuserroleses(Set<Customuserroles> customuserroleses) {
		this.customuserroleses = customuserroleses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Classes> getClasseses() {
		return this.classeses;
	}

	public void setClasseses(Set<Classes> classeses) {
		this.classeses = classeses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Customuserlogins> getCustomuserloginses() {
		return this.customuserloginses;
	}

	public void setCustomuserloginses(Set<Customuserlogins> customuserloginses) {
		this.customuserloginses = customuserloginses;
	}

}
